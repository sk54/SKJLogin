{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Login","React","lazy","Home","Page404","loading","className","ProtectedRoute","Component","render","props","time","localStorage","getItem","currentDate","Date","Math","floor","removeItem","console","log","token","to","App","Suspense","fallback","exact","path","name","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"gPAIMA,EAAQC,IAAMC,MAAK,kBAAM,sDACzBC,EAAOF,IAAMC,MAAK,kBAAM,sDACxBE,EAAUH,IAAMC,MAAK,kBAAM,sDAE3BG,EACJ,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,kCAIbC,EAAiB,SAAC,GAAoC,EAAlCC,UAAmC,IAAxBC,EAAuB,EAAvBA,OAAWC,EAAY,sCAGpDC,EAAOC,aAAaC,QAAQ,QAC5BC,EAAc,IAAIC,KACpBJ,GAASK,KAAKC,OAAOH,EAAc,IAAIC,KAAKJ,IAAS,MAAQ,IAAO,KACtEC,aAAaM,WAAW,SACxBN,aAAaM,WAAW,QACxBN,aAAaM,WAAW,YACxBN,aAAaM,WAAW,YACxBC,QAAQC,IAAI,kBAAoBJ,KAAKC,OAAOH,EAAc,IAAIC,KAAKJ,IAAS,MAAQ,KAEtFQ,QAAQC,IAAI,sBAAwBJ,KAAKC,OAAOH,EAAc,IAAIC,KAAKJ,IAAS,MAAQ,IACxF,IAAMU,EAAQT,aAAaC,QAAQ,SAEnC,OADAM,QAAQC,IAAIC,GACRA,EAEK,cAAC,IAAD,2BAAWX,GAAX,IAAkBD,OAAQA,KAE1B,cAAC,IAAD,CAAUa,GAAG,OAmCTC,MA9Bf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAMC,SAAP,CAAgBC,SAAUpB,EAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEqB,OAAK,EACLC,KAAK,IACLC,KAAK,aACLnB,OAAQ,SAACC,GAAD,OAAW,cAACV,EAAD,eAAWU,OAEhC,cAAC,EAAD,CACEgB,OAAK,EACLC,KAAK,QACLC,KAAK,OACLnB,OAAQ,SAACC,GAAD,OAAW,cAACP,EAAD,eAAUO,OAE/B,cAAC,IAAD,CACEgB,OAAK,EACLC,KAAK,OACLC,KAAK,WACLnB,OAAQ,SAACC,GAAD,OAAW,cAACN,EAAD,eAAaM,OAElC,cAAC,IAAD,CAAOD,OAAQ,kBAAM,cAAC,IAAD,CAAUa,GAAI,CAAEO,SAAU,qBCjD1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAAS9B,OACP,cAAC,IAAM+B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.450c90cd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\nimport './App.css';\n\nconst Login = React.lazy(() => import(\"./Pages/Login\"));\nconst Home = React.lazy(() => import(\"./Pages/Home\"));\nconst Page404 = React.lazy(() => import(\"./Pages/Page404\"));\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n);\n\nconst ProtectedRoute = ({ Component, render, ...props }) => {\n  // let history = useHistory();\n  // let isAuthenticated = false;\n  const time = localStorage.getItem(\"time\");\n  const currentDate = new Date();\n  if (time && (Math.floor((currentDate - new Date(time)) / 3600) % 24) >= 24) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"time\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n    console.log(\" token expired \", (Math.floor((currentDate - new Date(time)) / 3600) % 24));\n  }\n  console.log(\" token not expired \", (Math.floor((currentDate - new Date(time)) / 3600) % 24));\n  const token = localStorage.getItem(\"token\");\n  console.log(token);\n  if (token) {\n    //isAuthenticated = true;\n    return <Route {...props} render={render} />;\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n};\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <React.Suspense fallback={loading}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            name=\"Login Page\"\n            render={(props) => <Login {...props} />}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/home\"\n            name=\"Home\"\n            render={(props) => <Home {...props} />}\n          />\n          <Route\n            exact\n            path=\"/404\"\n            name=\"Page 404\"\n            render={(props) => <Page404 {...props} />}\n          />\n          <Route render={() => <Redirect to={{ pathname: \"/404\" }} />} />\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@coreui/coreui/dist/css/coreui.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}