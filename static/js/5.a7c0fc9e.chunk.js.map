{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Pages/Login/Login.js","Pages/Login/index.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","Login","history","useHistory","useState","username","handleUsername","password","handlePassword","handleSubmit","console","log","localStorage","setItem","Date","alert","className","style","backgroundColor","md","onSubmit","type","placeholder","autoComplete","onChange","target","values","xs","color","onClick"],"mappings":"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","file":"static/js/5.a7c0fc9e.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n\r\n    const [username, handleUsername] = useState(\"\");\r\n    const [password, handlePassword] = useState(\"\");\r\n\r\n    const handleSubmit = () => {\r\n        console.log(\"login \", username, password);\r\n        if (username && password) {\r\n            console.log(\"login success \", username, password);\r\n            localStorage.setItem(\"username\", username);\r\n            localStorage.setItem(\"password\", password);\r\n            localStorage.setItem(\"token\", username + \",\" + password);\r\n            localStorage.setItem(\"time\", new Date());\r\n            history.push(\"/home\");\r\n        } else {\r\n            alert(\" Invalid email or passord! \");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"c-app c-default-layout flex-row align-items-center\" style={{ backgroundColor: \"#0046bb\" }}>\r\n            <CContainer>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"6\">\r\n                        <CCardGroup>\r\n                            <CCard className=\"p-4\">\r\n                                <CCardBody>\r\n                                    <CForm onSubmit={handleSubmit}>\r\n                                        <h1>Login</h1>\r\n                                        <p className=\"text-muted\">Sign In to your account</p>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-user\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                placeholder=\"Username\"\r\n                                                autoComplete=\"username\"\r\n                                                name=\"username\"\r\n                                                onChange={(value) => handleUsername(value.target.value)}\r\n                                                values={username}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-4\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-lock-locked\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                autoComplete=\"current-password\"\r\n                                                name=\"password\"\r\n                                                onChange={(value) => handlePassword(value.target.value)}\r\n                                                value={password}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CButton\r\n                                                    color=\"primary\"\r\n                                                    className=\"px-4\"\r\n                                                    onClick={() => handleSubmit()}\r\n                                                >\r\n                                                    login\r\n                                                </CButton>\r\n                                            </CCol>\r\n                                            {/* <CCol xs=\"6\" className=\"text-right\">\r\n                                                <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\r\n                                            </CCol> */}\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCardGroup>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import Login from \"./Login\";\r\nexport default Login;"],"sourceRoot":""}